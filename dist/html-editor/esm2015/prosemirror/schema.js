import { Schema } from "prosemirror-model";
import { marks as basicMarks, nodes as basicNodes } from "prosemirror-schema-basic";
import { bulletList, listItem, orderedList } from "prosemirror-schema-list";
import { fontSize } from "./marks/font-size";
import { alignment } from "./marks/alignment";
import { youtube } from "./nodes/youtube";
export const nodes = {
    doc: {
        content: "block+",
        marks: "alignment",
    },
    paragraph: {
        content: "inline*",
        marks: "alignment strong underline em fontSize link",
        group: "block",
        parseDOM: [{ tag: "p" }],
        toDOM() { return ["p", 0]; }
    },
    blockquote: basicNodes.blockquote,
    horizontalRule: basicNodes.horizontal_rule,
    heading: basicNodes.heading,
    text: basicNodes.text,
    hardBreak: basicNodes.hard_break,
    bulletList: Object.assign({}, bulletList, {
        content: "listItem+",
        group: "block"
    }),
    orderedList: Object.assign({}, orderedList, {
        content: "listItem+",
        group: "block"
    }),
    listItem: Object.assign({}, listItem, {
        content: "paragraph block*",
        marks: "alignment"
    }),
    youtube
};
export const marks = {
    link: basicMarks.link,
    em: basicMarks.em,
    strong: basicMarks.strong,
    alignment,
    fontSize: fontSize,
    underline: {
        parseDOM: [{ tag: "u" }, { style: "text-decoration=underline" }],
        toDOM() {
            return ["u", 0];
        }
    }
};
export const schema = new Schema({ nodes: nodes, marks: marks });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNvLm1tb25zL2lvbmljLWV4dGVuc2lvbnMvaHRtbC1lZGl0b3IvIiwic291cmNlcyI6WyJwcm9zZW1pcnJvci9zY2hlbWEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFxQixNQUFNLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUM3RCxPQUFPLEVBQUMsS0FBSyxJQUFJLFVBQVUsRUFBRSxLQUFLLElBQUksVUFBVSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDbEYsT0FBTyxFQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDMUUsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUM1QyxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFFeEMsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHO0lBQ2pCLEdBQUcsRUFBRTtRQUNELE9BQU8sRUFBRSxRQUFRO1FBQ2pCLEtBQUssRUFBRSxXQUFXO0tBQ3JCO0lBRUQsU0FBUyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsS0FBSyxFQUFFLDZDQUE2QztRQUNwRCxLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxDQUFDLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBQyxDQUFDO1FBQ3RCLEtBQUssS0FBSyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNuQjtJQUViLFVBQVUsRUFBRSxVQUFVLENBQUMsVUFBVTtJQUNqQyxjQUFjLEVBQUUsVUFBVSxDQUFDLGVBQWU7SUFDMUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxPQUFPO0lBQzNCLElBQUksRUFBRSxVQUFVLENBQUMsSUFBSTtJQUNyQixTQUFTLEVBQUUsVUFBVSxDQUFDLFVBQVU7SUFFaEMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFVBQVUsRUFBRTtRQUN0QyxPQUFPLEVBQUUsV0FBVztRQUNwQixLQUFLLEVBQUUsT0FBTztLQUNqQixDQUFhO0lBRWQsV0FBVyxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFdBQVcsRUFBRTtRQUN4QyxPQUFPLEVBQUUsV0FBVztRQUNwQixLQUFLLEVBQUUsT0FBTztLQUNqQixDQUFhO0lBRWQsUUFBUSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRTtRQUNsQyxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLEtBQUssRUFBRSxXQUFXO0tBQ3JCLENBQWE7SUFFZCxPQUFPO0NBQ1YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRztJQUNqQixJQUFJLEVBQUUsVUFBVSxDQUFDLElBQUk7SUFDckIsRUFBRSxFQUFFLFVBQVUsQ0FBQyxFQUFFO0lBQ2pCLE1BQU0sRUFBRSxVQUFVLENBQUMsTUFBTTtJQUN6QixTQUFTO0lBQ1QsUUFBUSxFQUFFLFFBQVE7SUFFbEIsU0FBUyxFQUFFO1FBQ1AsUUFBUSxFQUFFLENBQUMsRUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUUsMkJBQTJCLEVBQUMsQ0FBQztRQUM1RCxLQUFLO1lBQ0QsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNwQixDQUFDO0tBQ1E7Q0FDaEIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBeUMsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNYXJrU3BlYywgTm9kZVNwZWMsIFNjaGVtYX0gZnJvbSBcInByb3NlbWlycm9yLW1vZGVsXCI7XG5pbXBvcnQge21hcmtzIGFzIGJhc2ljTWFya3MsIG5vZGVzIGFzIGJhc2ljTm9kZXN9IGZyb20gXCJwcm9zZW1pcnJvci1zY2hlbWEtYmFzaWNcIjtcbmltcG9ydCB7YnVsbGV0TGlzdCwgbGlzdEl0ZW0sIG9yZGVyZWRMaXN0fSBmcm9tIFwicHJvc2VtaXJyb3Itc2NoZW1hLWxpc3RcIjtcbmltcG9ydCB7Zm9udFNpemV9IGZyb20gXCIuL21hcmtzL2ZvbnQtc2l6ZVwiO1xuaW1wb3J0IHthbGlnbm1lbnR9IGZyb20gXCIuL21hcmtzL2FsaWdubWVudFwiO1xuaW1wb3J0IHt5b3V0dWJlfSBmcm9tIFwiLi9ub2Rlcy95b3V0dWJlXCI7XG5cbmV4cG9ydCBjb25zdCBub2RlcyA9IHtcbiAgICBkb2M6IHtcbiAgICAgICAgY29udGVudDogXCJibG9jaytcIixcbiAgICAgICAgbWFya3M6IFwiYWxpZ25tZW50XCIsXG4gICAgfSxcblxuICAgIHBhcmFncmFwaDoge1xuICAgICAgICBjb250ZW50OiBcImlubGluZSpcIixcbiAgICAgICAgbWFya3M6IFwiYWxpZ25tZW50IHN0cm9uZyB1bmRlcmxpbmUgZW0gZm9udFNpemUgbGlua1wiLFxuICAgICAgICBncm91cDogXCJibG9ja1wiLFxuICAgICAgICBwYXJzZURPTTogW3t0YWc6IFwicFwifV0sXG4gICAgICAgIHRvRE9NKCkgeyByZXR1cm4gW1wicFwiLCAwXTsgfVxuICAgIH0gYXMgTm9kZVNwZWMsXG5cbiAgICBibG9ja3F1b3RlOiBiYXNpY05vZGVzLmJsb2NrcXVvdGUsXG4gICAgaG9yaXpvbnRhbFJ1bGU6IGJhc2ljTm9kZXMuaG9yaXpvbnRhbF9ydWxlLFxuICAgIGhlYWRpbmc6IGJhc2ljTm9kZXMuaGVhZGluZyxcbiAgICB0ZXh0OiBiYXNpY05vZGVzLnRleHQsXG4gICAgaGFyZEJyZWFrOiBiYXNpY05vZGVzLmhhcmRfYnJlYWssXG5cbiAgICBidWxsZXRMaXN0OiBPYmplY3QuYXNzaWduKHt9LCBidWxsZXRMaXN0LCB7XG4gICAgICAgIGNvbnRlbnQ6IFwibGlzdEl0ZW0rXCIsXG4gICAgICAgIGdyb3VwOiBcImJsb2NrXCJcbiAgICB9KSBhcyBOb2RlU3BlYyxcblxuICAgIG9yZGVyZWRMaXN0OiBPYmplY3QuYXNzaWduKHt9LCBvcmRlcmVkTGlzdCwge1xuICAgICAgICBjb250ZW50OiBcImxpc3RJdGVtK1wiLFxuICAgICAgICBncm91cDogXCJibG9ja1wiXG4gICAgfSkgYXMgTm9kZVNwZWMsXG5cbiAgICBsaXN0SXRlbTogT2JqZWN0LmFzc2lnbih7fSwgbGlzdEl0ZW0sIHtcbiAgICAgICAgY29udGVudDogXCJwYXJhZ3JhcGggYmxvY2sqXCIsXG4gICAgICAgIG1hcmtzOiBcImFsaWdubWVudFwiXG4gICAgfSkgYXMgTm9kZVNwZWMsXG5cbiAgICB5b3V0dWJlXG59O1xuXG5leHBvcnQgY29uc3QgbWFya3MgPSB7XG4gICAgbGluazogYmFzaWNNYXJrcy5saW5rLFxuICAgIGVtOiBiYXNpY01hcmtzLmVtLFxuICAgIHN0cm9uZzogYmFzaWNNYXJrcy5zdHJvbmcsXG4gICAgYWxpZ25tZW50LFxuICAgIGZvbnRTaXplOiBmb250U2l6ZSxcblxuICAgIHVuZGVybGluZToge1xuICAgICAgICBwYXJzZURPTTogW3t0YWc6IFwidVwifSwge3N0eWxlOiBcInRleHQtZGVjb3JhdGlvbj11bmRlcmxpbmVcIn1dLFxuICAgICAgICB0b0RPTSgpIHtcbiAgICAgICAgICAgIHJldHVybiBbXCJ1XCIsIDBdO1xuICAgICAgICB9XG4gICAgfSBhcyBNYXJrU3BlY1xufTtcblxuZXhwb3J0IGNvbnN0IHNjaGVtYSA9IG5ldyBTY2hlbWE8a2V5b2YgdHlwZW9mIG5vZGVzLCBrZXlvZiB0eXBlb2YgbWFya3M+KHtub2Rlczogbm9kZXMsIG1hcmtzOiBtYXJrc30pO1xuXG4iXX0=