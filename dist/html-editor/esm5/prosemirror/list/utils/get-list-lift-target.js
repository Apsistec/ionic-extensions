// This will return (depth - 1) for root list parent of a list.
export var getListLiftTarget = function (schema, resPos) {
    var target = resPos.depth;
    var _a = schema.nodes, bulletList = _a.bulletList, orderedList = _a.orderedList, listItem = _a.listItem;
    for (var i = resPos.depth; i > 0; i--) {
        var node = resPos.node(i);
        if (node.type === bulletList || node.type === orderedList) {
            target = i;
        }
        if (node.type !== bulletList &&
            node.type !== orderedList &&
            node.type !== listItem) {
            break;
        }
    }
    return target - 1;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWxpc3QtbGlmdC10YXJnZXQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY28ubW1vbnMvaW9uaWMtZXh0ZW5zaW9ucy9odG1sLWVkaXRvci8iLCJzb3VyY2VzIjpbInByb3NlbWlycm9yL2xpc3QvdXRpbHMvZ2V0LWxpc3QtbGlmdC10YXJnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsK0RBQStEO0FBQy9ELE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHLFVBQzdCLE1BQWMsRUFDZCxNQUFtQjtJQUVuQixJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ3BCLElBQUEsaUJBQW9ELEVBQWxELDBCQUFVLEVBQUUsNEJBQVcsRUFBRSxzQkFBeUIsQ0FBQztJQUMzRCxLQUFLLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNuQyxJQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxVQUFVLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxXQUFXLEVBQUU7WUFDdkQsTUFBTSxHQUFHLENBQUMsQ0FBQztTQUNkO1FBQ0QsSUFDSSxJQUFJLENBQUMsSUFBSSxLQUFLLFVBQVU7WUFDeEIsSUFBSSxDQUFDLElBQUksS0FBSyxXQUFXO1lBQ3pCLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUN4QjtZQUNFLE1BQU07U0FDVDtLQUNKO0lBQ0QsT0FBTyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0FBQ3RCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVzb2x2ZWRQb3MsIFNjaGVtYX0gZnJvbSBcInByb3NlbWlycm9yLW1vZGVsXCI7XG5cbi8vIFRoaXMgd2lsbCByZXR1cm4gKGRlcHRoIC0gMSkgZm9yIHJvb3QgbGlzdCBwYXJlbnQgb2YgYSBsaXN0LlxuZXhwb3J0IGNvbnN0IGdldExpc3RMaWZ0VGFyZ2V0ID0gKFxuICAgIHNjaGVtYTogU2NoZW1hLFxuICAgIHJlc1BvczogUmVzb2x2ZWRQb3MsXG4pOiBudW1iZXIgPT4ge1xuICAgIGxldCB0YXJnZXQgPSByZXNQb3MuZGVwdGg7XG4gICAgY29uc3QgeyBidWxsZXRMaXN0LCBvcmRlcmVkTGlzdCwgbGlzdEl0ZW0gfSA9IHNjaGVtYS5ub2RlcztcbiAgICBmb3IgKGxldCBpID0gcmVzUG9zLmRlcHRoOyBpID4gMDsgaS0tKSB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSByZXNQb3Mubm9kZShpKTtcbiAgICAgICAgaWYgKG5vZGUudHlwZSA9PT0gYnVsbGV0TGlzdCB8fCBub2RlLnR5cGUgPT09IG9yZGVyZWRMaXN0KSB7XG4gICAgICAgICAgICB0YXJnZXQgPSBpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIG5vZGUudHlwZSAhPT0gYnVsbGV0TGlzdCAmJlxuICAgICAgICAgICAgbm9kZS50eXBlICE9PSBvcmRlcmVkTGlzdCAmJlxuICAgICAgICAgICAgbm9kZS50eXBlICE9PSBsaXN0SXRlbVxuICAgICAgICApIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQgLSAxO1xufTtcbiJdfQ==