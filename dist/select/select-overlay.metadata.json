[{"__symbolic":"module","version":4,"metadata":{"SelectOverlayContent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"ionx-select-overlay","template":"\n        <ion-header *ngIf=\"modalOverlay\">\n            <ion-toolbar>\n                <ion-title>{{title}}</ion-title>\n\n                <ion-buttons slot=\"start\">\n                    <ion-button (click)=\"cancelClicked()\">\n                        <ion-icon name=\"close\" slot=\"icon-only\"></ion-icon>\n                    </ion-button>\n                </ion-buttons>\n\n                <ion-buttons slot=\"end\">\n                    <ion-button (click)=\"okClicked()\">{{\"@co.mmons/js-intl#Done\" | intlMessage}}</ion-button>\n                </ion-buttons>\n\n            </ion-toolbar>\n            <ion-toolbar>\n                <ion-searchbar #searchbar cancelButtonText=\"{{'@co.mmons/js-intl#Cancel' | intlMessage}}\" placeholder=\"{{'@co.mmons/js-intl#Search' | intlMessage}}\" (ionInput)=\"search($event)\"></ion-searchbar>\n            </ion-toolbar>\n        </ion-header>\n        <ion-content [scrollY]=\"false\" [scrollX]=\"false\" #content>\n            \n            <div class=\"ionx-select-overlay-spinner\" slot=\"fixed\" *ngIf=\"!checkedOptions\">\n                <ion-spinner></ion-spinner>\n            </div>\n            \n            <ng-template [ngIf]=\"!!visibleOptions\">\n                <div>\n                \n                <cdk-virtual-scroll-viewport [itemSize]=\"itemHeight\" [style.height.px]=\"scrollHeight\" *ngIf=\"modalOverlay\">\n    \n                    <ion-list lines=\"full\">\n                                \n                        <ion-item detail=\"false\" [button]=\"!option.divider\" [style.fontWeight]=\"option.divider ? 500 : null\" #listItem *cdkVirtualFor=\"let option of visibleOptions\">\n                            <ion-checkbox [(ngModel)]=\"option.checked\" (ngModelChange)=\"optionClicked(option)\" (ionChange)=\"optionChanged(option)\" slot=\"start\" *ngIf=\"!option.divider\"></ion-checkbox>\n                            <ion-label>\n                                <span *ngIf=\"!label; else customLabel\">{{option.label}}</span>\n                                <ng-template #customLabel>\n                                    <ng-container *ngTemplateOutlet=\"label.templateRef; context: {$implicit: option.value}\"></ng-container>\n                                </ng-template>\n                            </ion-label>\n                        </ion-item>\n                    </ion-list>\n                    \n                </cdk-virtual-scroll-viewport>\n                \n                <ion-list lines=\"full\" *ngIf=\"popoverOverlay\">\n                \n                    <ng-template ngFor [ngForOf]=\"visibleOptions\" let-option>\n                    \n                        <ion-item-divider *ngIf=\"option.divider; else basicOption\">\n                            <ion-label>{{option.label}}</ion-label>\n                        </ion-item-divider>\n                        \n                        <ng-template #basicOption>\n                        \n                            <ion-item detail=\"false\" button=\"true\" #listItem>\n                                <ion-checkbox [(ngModel)]=\"option.checked\" (ngModelChange)=\"optionClicked(option)\" (ionChange)=\"optionChanged(option)\"></ion-checkbox>\n                                <ion-label>\n                                    <span *ngIf=\"!label; else customLabel\">{{option.label}}</span>\n                                    <ng-template #customLabel>\n                                        <ng-container *ngTemplateOutlet=\"label.templateRef; context: {$implicit: option.value}\"></ng-container>\n                                    </ng-template>\n                                </ion-label>\n                            </ion-item>\n                            \n                        </ng-template>\n                    \n                    </ng-template>\n                </ion-list>\n                </div>\n            </ng-template>\n\n        </ion-content>\n    ","styles":[":host ::ng-deep .cdk-virtual-scroll-content-wrapper { max-width: 100% }",":host ::ng-deep .hydrated { visibility: visible }"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":96,"character":9}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":97,"character":9}}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":94,"character":24,"arguments":[{"__symbolic":"error","message":"Could not resolve type","line":94,"character":35,"context":{"typeName":"HTMLElement"}}]},{"__symbolic":"reference","module":"@co.mmons/angular-intl","name":"IntlService","line":95,"character":24},{"__symbolic":"reference","module":"@ionic/angular","name":"PopoverController","line":96,"character":47},{"__symbolic":"reference","module":"@ionic/angular","name":"ModalController","line":97,"character":45}]}],"overlay":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":101,"character":5}}]}],"scroll":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":112,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/cdk/scrolling","name":"CdkVirtualScrollViewport","line":112,"character":15}]}]}],"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":119,"character":5},"arguments":["content",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":94,"character":24,"arguments":[{"__symbolic":"error","message":"Could not resolve type","line":94,"character":35,"context":{"typeName":"HTMLElement"}}]}}]}]}],"multiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":122,"character":5}}]}],"orderable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":125,"character":5}}]}],"updateValues":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":128,"character":5}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":131,"character":5}}]}],"searchHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":134,"character":5}}]}],"valueValidator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":137,"character":5}}]}],"valueComparator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":140,"character":5}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":143,"character":5}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":146,"character":5}}]}],"optionDivider":[{"__symbolic":"method"}],"optionClicked":[{"__symbolic":"method"}],"optionChanged":[{"__symbolic":"method"}],"buildVisibleOptions":[{"__symbolic":"method"}],"initOptions":[{"__symbolic":"method"}],"okClicked":[{"__symbolic":"method"}],"cancelClicked":[{"__symbolic":"method"}],"searchbar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":336,"character":5},"arguments":["searchbar",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":94,"character":24,"arguments":[{"__symbolic":"error","message":"Could not resolve type","line":94,"character":35,"context":{"typeName":"HTMLElement"}}]}}]}]}],"search":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"resetScrollHeight":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":373,"character":5},"arguments":["window:resize"]}]}],"ionViewDidEnter":[{"__symbolic":"method"}]}}}}]